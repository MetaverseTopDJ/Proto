syntax = "proto3";

package nft;

option go_package = "./pb;pb";

import "global/global.proto";
import "global/contract.proto";
import "nft/nft_creator.proto";
import "nft/nft_transfer.proto";
import "nft/member_nft.proto";
import "nft/signature.proto";

/**************** 数据结构 ****************/

// NFT 信息
message NFT {
  uint64                  id          = 1;
  uint64                  contract_id = 2;
  uint64                  token_id    = 3;
  uint64                  work_id     = 4;
  uint64                  creator_id  = 5;
  uint64                  owner_id    = 6;
  uint64                  code        = 7;
  string                  price       = 8;
  string                  symbol      = 9;
  uint64                  version     = 10;
  string                  created_at  = 11;
  string                  updated_at  = 12;
  global.RelationContract contract    = 13;
}

// NFTContent NFT Metadata 
message NFTContent {
  uint64 contract_id = 1;
  uint64 token_id    = 2;
  string content     = 3;
}

/**************** 请求结构 ****************/

// CountWorkCollectorPost 计算作品收藏者人数
message CountWorkCollectorPost {
  uint64 contract_id = 1;
  uint64 work_id     = 2;
}

// MemberWorkPost 会员拥有的 Work
message MemberWorkPost {
  uint64 contract_id = 1;
  uint64 owner_id    = 2;
}

// NftPaginationPost NFT 分页请求
message NftPaginationPost {
  uint64 contract_id = 1;
  string creator     = 2;
  string owner       = 3;
  uint64 page        = 4;
  uint64 size        = 5;
}

// CheckExchangePost 检查兑换
message CheckCollectExchangePost {
  uint64 code = 1;
}

// CheckBlindExchangePost 检查兑换
message CheckBlindExchangePost {
  uint64 code = 1;
  uint64 num  = 2;
}

/**************** 返回结构 ****************/

// NftResponse 返回
message NFTResponse {
  string message = 1;
  NFT    data    = 2;
}

// NFTContentResponse 返回 NFT 内容
message NFTContentResponse {
  string     message = 1;
  NFTContent data    = 2;
}

// NFTPaginationResponse 分页
message NFTPaginationResponse {
  message NFTs {
    repeated NFT list = 1;
    int64    total    = 2;
  }
  string message = 1;
  NFTs   data    = 2;
}

// NFTService NFT 服务 
service NFTService {

  // 盲盒 Metadata
  rpc MysteryBox (global.InfoPost) returns (NFTContentResponse) {}
  rpc Note (global.InfoPost) returns (NFTContentResponse) {}
  rpc Ticket (global.InfoPost) returns (NFTContentResponse) {}
  rpc RemixInfo (global.InfoPost) returns (NFTContentResponse) {}

  // 合约
  rpc NftContract (global.InfoPost) returns (global.ContractResponse) {}
  rpc NftContracts (global.EmptyPost) returns (global.ContractsResponse) {}
  rpc NftContractAddress (global.EmptyPost) returns (global.ContractAddressResponse) {} // 会员合约地址
  rpc NftContractPagination (global.PaginationPost) returns (global.ContractPaginationResponse) {}
  rpc CreateNftContract (global.CreateContractPost) returns (global.ContractResponse) {}
  rpc UpdateNftContract (global.UpdateContractPost) returns (global.ContractResponse) {}
  rpc ChangeNftContractStatus (global.ChangeStatusPost) returns (global.ContractResponse) {}

  // 合约 辅助功能
  rpc GenUniqueCode (global.GenUniqueCodePost) returns (global.NumberResponse) {}
  rpc GenUniqueCodes (global.GenUniqueCodesPost) returns (global.NumbersResponse) {}
  rpc BlindBoxSignature (BlindBoxSignPost) returns (SignatureResponse) {}
  rpc RemixSignature (RemixSignPost) returns (SignatureResponse) {}
  rpc CollectSignature (CollectSignPost) returns (SignatureResponse) {}

  rpc CheckTransactionByHash(global.CheckTransactionByHashPost) returns (global.ResultResponse) {} // 检查交易结果

  // 合约操作

  rpc BlindBoxContracts (global.EmptyPost) returns (global.ContractsResponse) {}
  rpc StartBlindBoxContract (global.EmptyPost) returns (global.ResultResponse) {}
  rpc StopBlindBoxContract (global.EmptyPost) returns (global.ResultResponse) {}

  rpc NoteContract (global.InfoPost) returns (global.ContractResponse) {}
  rpc StartNoteContract (global.InfoPost) returns (global.ResultResponse) {}
  rpc StopNoteContract (global.InfoPost) returns (global.ResultResponse) {}

  rpc TicketContract (global.InfoPost) returns (global.ContractResponse) {}
  rpc StartTicketContract (global.InfoPost) returns (global.ResultResponse) {}
  rpc StopTicketContract (global.InfoPost) returns (global.ResultResponse) {}

  // NFT
  // rpc CheckBlindBoxTx (CheckBlindBoxTxPost) returns (global.CheckResponse) {} // 检查盲盒交易
  rpc MemberNftPagination (MemberNftPaginationPost) returns (MemberNftPaginationResponse) {} // 会员 NFT
  rpc NftMemberPagination (NftMemberPaginationPost) returns (NftMemberPaginationResponse) {}

  // NFT 后台
  rpc Nft (global.InfoPost) returns (NFTResponse) {}
  rpc NftPrice (global.InfoPost) returns (global.ResultResponse) {}
  rpc CountWorkCollector (CountWorkCollectorPost) returns (global.CountResponse) {}
  rpc MemberWorkIDs (MemberWorkPost) returns (global.IDsResponse) {} // 会员拥有的 Work 集合
  rpc MemberCollectWorkIDs (MemberWorkPost) returns (global.IDsResponse) {} // 会员拥有的 Work 集合 去重
  rpc NftPagination (NftPaginationPost) returns (NFTPaginationResponse) {}
  rpc NftCreatorPagination (NftCreatorPaginationPost) returns (NFTCreatorPaginationResponse) {}
  rpc NftTransferPagination (NftTransferPaginationPost) returns (NFTTransferPaginationResponse) {}

  rpc CheckCollectExchangeTx (CheckCollectExchangePost) returns (global.CheckResponse) {}
  rpc CheckBlindBoxExchangeTx (CheckBlindExchangePost) returns (global.CheckResponse) {}
}