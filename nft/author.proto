syntax = "proto3";

package nft;

option go_package = "./pb;pb";

/**************** 数据结构 ****************/

// Author 作者数据结构
message Author {
  uint64 id               = 1;
  string avatar           = 2;
  string first_name       = 3;
  string last_name        = 4;
  string title            = 5;
  string description      = 6;
  string background_out   = 7;
  string background_inner = 8;
  bool   hot              = 9;
  string facebook         = 10;
  string twitter          = 11;
  uint64 follower         = 12;
  uint64 status           = 13;
  bool   checked          = 14;
  string created_at       = 15;
  string updated_at       = 16;
}

// SimpleAuthor 返回前端的作者数据
message SimpleAuthor {
  uint64 id               = 1;
  string avatar           = 2;
  string first_name       = 3;
  string last_name        = 4;
  string title            = 5;
  string description      = 6;
  string background_out   = 7;
  string background_inner = 8;
  bool   hot              = 9;
  string facebook         = 10;
  string twitter          = 11;
  uint64 follower         = 12;
  uint64 status           = 13;
  int64  work_num         = 14;
}

/**************** 请求结构 ****************/

// CreateAuthorPost 创建作者
message CreateAuthorPost {
  string avatar           = 2;
  string first_name       = 3;
  string last_name        = 4;
  string title            = 5;
  string description      = 6;
  string background_out   = 7;
  string background_inner = 8;
  bool   hot              = 9;
  string facebook         = 10;
  string twitter          = 11;
  uint64 follower         = 12;
}

// UpdateAuthorPost 更新作者
message UpdateAuthorPost {
  uint64 id               = 1;
  string avatar           = 2;
  string first_name       = 3;
  string last_name        = 4;
  string title            = 5;
  string description      = 6;
  string background_out   = 7;
  string background_inner = 8;
  bool   hot              = 9;
  string facebook         = 10;
  string twitter          = 11;
  uint64 follower         = 12;
}

/**************** 返回结构 ****************/

// AuthorResponse 返回
message AuthorResponse {
  string message = 1;
  Author data    = 2;
}

message SimpleAuthorResponse {
  string       message = 1;
  SimpleAuthor data    = 2;
}

// HotAuthorsResponse 返回 热门艺术家
message HotAuthorsResponse {
  string   message           = 1;
  repeated SimpleAuthor data = 2;
}

// AuthorPaginationResponse 返回 分页
message AuthorPaginationResponse {
  message SimpleAuthors {
    repeated SimpleAuthor list = 1;
    int64    total             = 2;
  }
  string        message = 1;
  SimpleAuthors data    = 2;
}