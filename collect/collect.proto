syntax = "proto3";

package collect;

option go_package = "./pb;pb";

import "global/global.proto";
import "collect/author.proto";
import "collect/work.proto";
import "collect/blind_box.proto";
import "collect/blind_box_stage.proto";
import "collect/blind_box_content.proto";
import "collect/blind_box_exchange.proto";
import "collect/blind_box_signature.proto";
import "collect/blind_box_white_address.proto";
import "collect/collect_exchange.proto";

/**************** 数据结构 ****************/

// Collect 集卡活动
message Collect {
  uint64   id             = 1;
  uint64   contract_id    = 2;
  uint64   sort           = 3;
  string   title          = 4;
  string   sub_title      = 5;
  string   description    = 6;
  string   banner         = 7;
  string   series         = 8;
  string   start_at       = 9;
  string   end_at         = 10;
  string   start_time     = 11;
  string   end_time       = 12;
  uint64   status         = 13;
  bool     check          = 14;
  uint64   reward         = 15;
  repeated uint64 require = 16;
  string   created_at     = 17;
  string   updated_at     = 18;
}

// CollectReward 集卡奖励
message CollectReward {
  uint64 work_id = 1;
  string cover   = 2;
}

// CollectRequire 集卡需求
message CollectRequire {
  uint64 work_id = 1;
  string cover   = 2;
}

// CollectRewardDetail 集卡奖励 详情
message CollectRewardDetail {
  uint64 work_id         = 1;
  string type            = 2;
  string series          = 3;
  string serial_num      = 4;
  string title           = 5;
  string sub_title       = 6;
  string cover           = 7;
  string rarity          = 8;
  string published_date  = 9;
  uint64 published_total = 10;
}

// CollectRequireDetail 需求明细
message CollectRequireDetail {
  uint64 work_id         = 1;
  string type            = 2;
  string series          = 3;
  string serial_num      = 4;
  string title           = 5;
  string sub_title       = 6;
  string cover           = 7;
  string rarity          = 8;
  bool   have            = 9;
  string published_date  = 10;
  uint64 published_total = 11;
}

// SimpleCollect App 返回
message SimpleCollect {
  uint64 id          = 1;
  uint64 sort        = 2;
  string title       = 3;
  string sub_title   = 4;
  string description = 5;
  string banner      = 6;
  string series      = 7;
  uint64 start_at    = 8;
  uint64 end_at      = 9;
  bool   open        = 10;
  bool   hold        = 11;
  uint64 completed   = 12;
  uint64 status      = 13;
}

message SimpleCollectDetail {
  SimpleCollect       collect                           = 1;
  CollectRewardDetail reward                            = 2;
  repeated            CollectRequireDetail require_list = 3;
}

// CollectDetail 集卡明细
message CollectDetail {
  SimpleCollect collect                           = 1;
  CollectReward reward                            = 12;
  repeated      CollectRequireDetail require_list = 13;
}

/**************** 请求结构 ****************/

// CreateCollectPost 创建集卡
message CreateCollectPost {
  uint64   contract_id    = 2;
  uint64   sort           = 3;
  string   title          = 4;
  string   sub_title      = 5;
  string   description    = 6;
  string   banner         = 7;
  string   series         = 8;
  string   start_at       = 9;
  string   end_at         = 10;
  uint64   reward         = 11;
  repeated uint64 require = 12;
}

// UpdateCollectPost 更新集卡
message UpdateCollectPost {
  uint64   id             = 1;
  uint64   contract_id    = 2;
  uint64   sort           = 3;
  string   title          = 4;
  string   sub_title      = 5;
  string   description    = 6;
  string   banner         = 7;
  string   series         = 8;
  string   start_at       = 9;
  string   end_at         = 10;
  uint64   reward         = 11;
  repeated uint64 require = 12;
}

// ModifyCollectPost 编辑 集卡内容
message ModifyCollectPost {
  uint64   id                = 1;
  uint64   reward_id         = 2;
  repeated uint64 require_id = 3;
}

/**************** 返回结构 ****************/

// CollectResponse 返回集卡数据
message CollectResponse {
  string  message = 1;
  Collect data    = 2;
}

// CollectDetailResponse 集卡详情
message CollectDetailResponse {
  string        message = 1;
  CollectDetail data    = 2;
}

// CollectPaginationResponse 返回 集卡分页
message CollectPaginationResponse {
  message Collects {
    repeated Collect list = 1;
    int64    total        = 2;
  }
  string   message = 1;
  Collects data    = 2;
}

// SimpleCollectPaginationResponse 返回 前端集卡分页
message SimpleCollectPaginationResponse {
  message Collects {
    repeated SimpleCollectDetail list = 1;
    int64    total                    = 2;
  }
  string   message = 1;
  Collects data    = 2;
}

// CollectService 盲盒集卡 服务
service CollectService {
  // 作者
  rpc Author (global.InfoPost) returns (AuthorResponse) {}
  rpc AuthorDetail (global.InfoPost) returns (SimpleAuthorResponse);
  rpc HotAuthors (global.EmptyPost) returns (HotAuthorsResponse) {}
  rpc CacheAllAuthors (global.EmptyPost) returns (HotAuthorsResponse) {}
  rpc AuthorPagination (global.PaginationPost) returns (AuthorPaginationResponse) {}
  rpc CreateAuthor (CreateAuthorPost) returns (AuthorResponse) {}
  rpc UpdateAuthor (UpdateAuthorPost) returns (AuthorResponse) {}
  rpc ChangeAuthorStatus (global.ChangeStatusPost) returns (AuthorResponse) {}

  // 作品
  rpc Work (global.InfoPost) returns (WorkResponse) {}
  rpc WorkByType (WorkByTypePost) returns (WorkResponse) {} // 根据 作品类型、合约ID 获取作品
  rpc RandomWork (global.InfoPost) returns (WorkResponse) {}
  rpc Works (global.EmptyPost) returns (WorksResponse) {}
  rpc WorkDetail(global.InfoPost) returns (WorkDetailResponse) {}
  rpc RecommendWorks (RecommendWorksPost) returns (RecommendWorksResponse) {}
  rpc AuthorWorkPagination (AuthorWorkPaginationPost) returns (AuthorWorkPaginationResponse) {}
  rpc WorkPagination (global.PaginationPost) returns (WorkPaginationResponse) {}
  rpc CreateWork (CreateWorkPost) returns (WorkResponse) {}
  rpc UpdateWork (UpdateWorkPost) returns (WorkResponse) {}
  rpc ChangeWorkStatus (global.ChangeStatusPost) returns (WorkResponse) {}

    // 盲盒
  rpc BlindBox (global.InfoPost) returns (BlindBoxResponse) {}
  rpc BlindBoxByContract (global.InfoPost) returns (BlindBoxResponse) {}
  rpc BlindBoxes (global.EmptyPost) returns (BlindBoxesResponse) {} // 返回 盲盒列表
  rpc BlindBoxCount (global.InfoPost) returns (BlindBoxCountResponse) {} // 返回盲盒剩余数量
  rpc BlindBoxTop (BlindBoxTopPost) returns (BlindBoxTopResponse) {}
  rpc BlindBoxTopCount (global.EmptyPost) returns (BlindBoxCountResponse) {} // 返回 首页盲盒剩余数量
  rpc BlindBoxDetail (BlindBoxDetailPost) returns (BlindBoxDetailResponse) {} // 返回盲盒详情
  rpc BlindBoxPagination (global.PaginationPost) returns (BlindBoxPaginationResponse) {}
  rpc CreateBlindBox (CreateBlindBoxPost) returns (BlindBoxResponse) {}
  rpc UpdateBlindBox (UpdateBlindBoxPost) returns (BlindBoxResponse) {}
  rpc StartBlindBox (global.ChangeStatusPost) returns (BlindBoxResponse) {} // 开启盲盒

  // 前端盲盒交互
  rpc CheckBlindBoxStage (global.InfoPost) returns (CheckBlindBoxStageResponse) {} // 检查盲盒阶段
  rpc PurchaseBlindBox(BlindBoxSignaturePost) returns (BlindBoxSignatureResponse) {} // 白名单购买盲盒 签名
  rpc ExchangeBlindBox (global.InfoPost) returns (BlindBoxSignatureResponse) {}  // 兑换免费盲盒 签名

  // 盲盒内容
  rpc BlindBoxContent (BlindBoxContentInfoPost) returns (BlindBoxContentResponse) {}
  rpc BlindBoxContentPagination (BlindBoxContentPaginationPost) returns (BlindBoxContentPaginationResponse) {}
  rpc CreateBlindBoxContent (CreateBlindBoxContentPost) returns (global.ResultResponse) {}
  rpc UpdateBlindBoxContent (UpdateBlindBoxContentPost) returns (global.ResultResponse) {}
  rpc ReduceBlindBoxContent (BlindBoxContentInfoPost) returns (global.ResultResponse) {} // 扣除 盲盒内容数量
  rpc RemoveBlindBoxContent (BlindBoxContentInfoPost) returns (global.ResultResponse) {}

  // 盲盒阶段
  rpc BlindBoxStage (BlindBoxStagePost) returns (BlindBoxStageResponse) {}
  rpc BlindBoxStages (global.InfoPost) returns (BlindBoxStagesResponse) {}
  rpc BlindBoxStagePagination (global.InfoPost) returns (BlindBoxStagePaginationResponse) {}
  rpc CreateBlindBoxStage (ModifyBlindBoxStagePost) returns (BlindBoxStageResponse) {}
  rpc UpdateBlindBoxStage (ModifyBlindBoxStagePost) returns (BlindBoxStageResponse) {}
  rpc RemoveBlindBoxStage (BlindBoxStagePost) returns (global.ResultResponse) {}

  // 免费盲盒
  rpc MemberBlindBoxExchange (global.EmptyPost) returns (CountBlindBoxExchangeResponse) {}
  rpc AddressBlindBoxExchange (AddressBlindBoxExchangePost) returns (CountBlindBoxExchangeResponse) {}

  // 免费盲盒快照
  rpc GenBlindBoxSnapshot(global.InfoPost) returns (global.ResultResponse) {}
  rpc DelBlindBoxSnapshot(global.InfoPost) returns (global.ResultResponse) {}
  rpc GenBlindBoxExchange(global.InfoPost) returns (global.ResultResponse) {}
  rpc DelBlindBoxExchange(global.InfoPost) returns (global.ResultResponse) {}
  rpc BlindBoxSnapshotPagination (BlindBoxSnapshotPaginationPost) returns (BlindBoxSnapshotPaginationResponse) {}
  rpc BlindBoxExchangePagination (BlindBoxExchangePaginationPost) returns (BlindBoxExchangePaginationResponse) {}

  // 盲盒白名单
  rpc BlindBoxWhiteAddressPagination (BlindBoxWhiteAddressPaginationPost) returns (BlindBoxWhiteAddressPaginationResponse) {}
  rpc CreateBlindBoxWhiteAddress (CreateBlindBoxWhiteAddressPost) returns (global.ResultResponse) {}
  rpc RemoveBlindBoxWhiteAddress (RemoveBlindBoxWhiteAddressPost) returns (global.ResultResponse) {}

  // 集卡
  rpc Collect (global.InfoPost) returns (CollectResponse) {}
  rpc CollectDetail (global.InfoPost) returns (CollectDetailResponse) {} // 集卡明细
  rpc CollectPagination (global.PaginationPost) returns (CollectPaginationResponse) {}
  rpc SimpleCollectPagination (global.PaginationPost) returns (SimpleCollectPaginationResponse) {} // 前端集卡分页
  rpc CreateCollect (CreateCollectPost) returns (CollectResponse) {}
  rpc UpdateCollect (UpdateCollectPost) returns (CollectResponse) {}
  rpc ModifyCollect (ModifyCollectPost) returns (global.ResultResponse) {}
  rpc ChangeCollectStatus (global.ChangeStatusPost) returns (CollectResponse) {}

  // 集卡快照
  rpc GenCollectSnapshot(global.InfoPost) returns (global.ResultResponse) {}
  rpc DelCollectSnapshot(global.InfoPost) returns (global.ResultResponse) {}
  rpc GenCollectExchange(global.InfoPost) returns (global.ResultResponse) {}
  rpc DelCollectExchange(global.InfoPost) returns (global.ResultResponse) {}
  rpc CollectSnapshotPagination (CollectSnapshotPaginationPost) returns (CollectSnapshotPaginationResponse) {}
  rpc CollectExchangePagination (CollectExchangePaginationPost) returns (CollectExchangePaginationResponse) {}

  // 集卡交互
  rpc CollectExchange (global.InfoPost) returns (CollectSignatureResponse) {} // 集卡兑换
  rpc CollectExchangeByCode (CollectExchangeByCodePost) returns (CollectExchangeResponse) {} // 根据 Code 获取 Exchange·
  rpc CollectExchangeDone (CollectExchangeDonePost) returns (global.ResultResponse) {} // 兑换 完成
  rpc CheckCollectExchangeCode (CheckCollectExchangeCodePost) returns (global.ResultResponse) {} // 检查 集卡 Code
}