// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: nft/nft.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_nft_nft_proto protoreflect.FileDescriptor

var file_nft_nft_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6e, 0x66, 0x74, 0x2f, 0x6e, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x6e, 0x66, 0x74, 0x1a, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x6e, 0x66, 0x74, 0x2f, 0x6e,
	0x66, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x6e, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x6e, 0x66, 0x74, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x72,
	0x6f, 0x6e, 0x74, 0x61, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xea, 0x0a, 0x0a, 0x0a,
	0x4e, 0x46, 0x54, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x4e, 0x66,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x4e,
	0x46, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x12, 0x4e, 0x66, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x4e, 0x46, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x66, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x46, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x6e, 0x66, 0x74, 0x2e, 0x4e, 0x46, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x66, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x46, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x4e, 0x46, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x14, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x66, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e,
	0x66, 0x74, 0x2e, 0x4e, 0x46, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x10, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x6f, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x15,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x11, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x11, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x6f,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x11, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x6f,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6e, 0x66, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x17, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e,
	0x66, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62,
	0x12, 0x14, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f,
	0x64, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x16, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43,
	0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72,
	0x6f, 0x6e, 0x74, 0x61, 0x62, 0x12, 0x1b, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x50, 0x6f,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72,
	0x6f, 0x6e, 0x74, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72,
	0x6f, 0x6e, 0x74, 0x61, 0x62, 0x12, 0x1b, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x50, 0x6f,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72,
	0x6f, 0x6e, 0x74, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72,
	0x6f, 0x6e, 0x74, 0x61, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6e, 0x66,
	0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x62,
	0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_nft_nft_proto_goTypes = []interface{}{
	(*InfoPost)(nil),                       // 0: global.InfoPost
	(*PaginationPost)(nil),                 // 1: global.PaginationPost
	(*CreateNFTTokenPost)(nil),             // 2: nft.CreateNFTTokenPost
	(*UpdateNFTTokenPost)(nil),             // 3: nft.UpdateNFTTokenPost
	(*ChangeStatusPost)(nil),               // 4: global.ChangeStatusPost
	(*EmptyPost)(nil),                      // 5: global.EmptyPost
	(*CreateContractPost)(nil),             // 6: nft.CreateContractPost
	(*UpdateContractPost)(nil),             // 7: nft.UpdateContractPost
	(*InfoCodePost)(nil),                   // 8: global.InfoCodePost
	(*ModifyBlockCrontabPost)(nil),         // 9: nft.ModifyBlockCrontabPost
	(*ChangeStatusByCodePost)(nil),         // 10: global.ChangeStatusByCodePost
	(*NFTTokenResponse)(nil),               // 11: nft.NFTTokenResponse
	(*NFTTokenPaginationResponse)(nil),     // 12: nft.NFTTokenPaginationResponse
	(*ContractResponse)(nil),               // 13: nft.ContractResponse
	(*ContractAddressResponse)(nil),        // 14: nft.ContractAddressResponse
	(*ContractsResponse)(nil),              // 15: nft.ContractsResponse
	(*ContractPaginationResponse)(nil),     // 16: nft.ContractPaginationResponse
	(*BlockCrontabResponse)(nil),           // 17: nft.BlockCrontabResponse
	(*BlockCrontabsResponse)(nil),          // 18: nft.BlockCrontabsResponse
	(*BlockCrontabPaginationResponse)(nil), // 19: nft.BlockCrontabPaginationResponse
}
var file_nft_nft_proto_depIdxs = []int32{
	0,  // 0: nft.NFTService.NftToken:input_type -> global.InfoPost
	1,  // 1: nft.NFTService.NftTokenPagination:input_type -> global.PaginationPost
	2,  // 2: nft.NFTService.CreateNftToken:input_type -> nft.CreateNFTTokenPost
	3,  // 3: nft.NFTService.UpdateNftToken:input_type -> nft.UpdateNFTTokenPost
	4,  // 4: nft.NFTService.ChangeNftTokenStatus:input_type -> global.ChangeStatusPost
	0,  // 5: nft.NFTService.Contract:input_type -> global.InfoPost
	5,  // 6: nft.NFTService.MemberContractAddress:input_type -> global.EmptyPost
	5,  // 7: nft.NFTService.WorkContractAddress:input_type -> global.EmptyPost
	5,  // 8: nft.NFTService.Contracts:input_type -> global.EmptyPost
	1,  // 9: nft.NFTService.ContractPagination:input_type -> global.PaginationPost
	6,  // 10: nft.NFTService.CreateContract:input_type -> nft.CreateContractPost
	7,  // 11: nft.NFTService.UpdateContract:input_type -> nft.UpdateContractPost
	4,  // 12: nft.NFTService.ChangeContractStatus:input_type -> global.ChangeStatusPost
	8,  // 13: nft.NFTService.BlockCrontab:input_type -> global.InfoCodePost
	5,  // 14: nft.NFTService.BlockContracts:input_type -> global.EmptyPost
	1,  // 15: nft.NFTService.BlockCrontabPagination:input_type -> global.PaginationPost
	9,  // 16: nft.NFTService.CreateBlockCrontab:input_type -> nft.ModifyBlockCrontabPost
	9,  // 17: nft.NFTService.UpdateBlockCrontab:input_type -> nft.ModifyBlockCrontabPost
	10, // 18: nft.NFTService.ChangeBlockCrontabStatus:input_type -> global.ChangeStatusByCodePost
	11, // 19: nft.NFTService.NftToken:output_type -> nft.NFTTokenResponse
	12, // 20: nft.NFTService.NftTokenPagination:output_type -> nft.NFTTokenPaginationResponse
	11, // 21: nft.NFTService.CreateNftToken:output_type -> nft.NFTTokenResponse
	11, // 22: nft.NFTService.UpdateNftToken:output_type -> nft.NFTTokenResponse
	11, // 23: nft.NFTService.ChangeNftTokenStatus:output_type -> nft.NFTTokenResponse
	13, // 24: nft.NFTService.Contract:output_type -> nft.ContractResponse
	14, // 25: nft.NFTService.MemberContractAddress:output_type -> nft.ContractAddressResponse
	14, // 26: nft.NFTService.WorkContractAddress:output_type -> nft.ContractAddressResponse
	15, // 27: nft.NFTService.Contracts:output_type -> nft.ContractsResponse
	16, // 28: nft.NFTService.ContractPagination:output_type -> nft.ContractPaginationResponse
	13, // 29: nft.NFTService.CreateContract:output_type -> nft.ContractResponse
	13, // 30: nft.NFTService.UpdateContract:output_type -> nft.ContractResponse
	13, // 31: nft.NFTService.ChangeContractStatus:output_type -> nft.ContractResponse
	17, // 32: nft.NFTService.BlockCrontab:output_type -> nft.BlockCrontabResponse
	18, // 33: nft.NFTService.BlockContracts:output_type -> nft.BlockCrontabsResponse
	19, // 34: nft.NFTService.BlockCrontabPagination:output_type -> nft.BlockCrontabPaginationResponse
	17, // 35: nft.NFTService.CreateBlockCrontab:output_type -> nft.BlockCrontabResponse
	17, // 36: nft.NFTService.UpdateBlockCrontab:output_type -> nft.BlockCrontabResponse
	17, // 37: nft.NFTService.ChangeBlockCrontabStatus:output_type -> nft.BlockCrontabResponse
	19, // [19:38] is the sub-list for method output_type
	0,  // [0:19] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_nft_nft_proto_init() }
func file_nft_nft_proto_init() {
	if File_nft_nft_proto != nil {
		return
	}
	file_global_global_proto_init()
	file_nft_nft_token_proto_init()
	file_nft_contract_proto_init()
	file_nft_block_crontab_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nft_nft_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nft_nft_proto_goTypes,
		DependencyIndexes: file_nft_nft_proto_depIdxs,
	}.Build()
	File_nft_nft_proto = out.File
	file_nft_nft_proto_rawDesc = nil
	file_nft_nft_proto_goTypes = nil
	file_nft_nft_proto_depIdxs = nil
}
