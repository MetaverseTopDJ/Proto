// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: nft/work.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Work 作品
type Work struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	AuthorId      uint64 `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id"`
	Type          uint64 `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	SubTitle      string `protobuf:"bytes,5,opt,name=sub_title,json=subTitle,proto3" json:"sub_title"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description"`
	PublishedDate string `protobuf:"bytes,7,opt,name=published_date,json=publishedDate,proto3" json:"published_date"`
	SerialNum     string `protobuf:"bytes,8,opt,name=serial_num,json=serialNum,proto3" json:"serial_num"`
	Series        string `protobuf:"bytes,9,opt,name=series,proto3" json:"series"`
	Rarity        int64  `protobuf:"varint,10,opt,name=rarity,proto3" json:"rarity"`
	Introduction  string `protobuf:"bytes,11,opt,name=introduction,proto3" json:"introduction"`
	Path          string `protobuf:"bytes,12,opt,name=path,proto3" json:"path"`
	Sort          uint64 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort"`
	Cover         uint64 `protobuf:"varint,14,opt,name=cover,proto3" json:"cover"`
	Status        uint64 `protobuf:"varint,15,opt,name=status,proto3" json:"status"`
	Checked       bool   `protobuf:"varint,16,opt,name=checked,proto3" json:"checked"`
	CreatedAt     string `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt     string `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *Work) Reset() {
	*x = Work{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Work) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Work) ProtoMessage() {}

func (x *Work) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Work.ProtoReflect.Descriptor instead.
func (*Work) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{0}
}

func (x *Work) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Work) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Work) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Work) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Work) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *Work) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Work) GetPublishedDate() string {
	if x != nil {
		return x.PublishedDate
	}
	return ""
}

func (x *Work) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *Work) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *Work) GetRarity() int64 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *Work) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *Work) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Work) GetSort() uint64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Work) GetCover() uint64 {
	if x != nil {
		return x.Cover
	}
	return 0
}

func (x *Work) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Work) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

func (x *Work) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Work) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// SimpleWork 简单的 作品返回
type SimpleWork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Type          uint64 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	SubTitle      string `protobuf:"bytes,4,opt,name=sub_title,json=subTitle,proto3" json:"sub_title"`
	Description   string `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
	PublishedDate string `protobuf:"bytes,6,opt,name=published_date,json=publishedDate,proto3" json:"published_date"`
	Series        string `protobuf:"bytes,7,opt,name=series,proto3" json:"series"`
	SerialNum     string `protobuf:"bytes,8,opt,name=serial_num,json=serialNum,proto3" json:"serial_num"`
	Rarity        string `protobuf:"bytes,9,opt,name=rarity,proto3" json:"rarity"`
	Cover         string `protobuf:"bytes,10,opt,name=cover,proto3" json:"cover"`
	Path          string `protobuf:"bytes,11,opt,name=path,proto3" json:"path"`
	CreatedAt     string `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
}

func (x *SimpleWork) Reset() {
	*x = SimpleWork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleWork) ProtoMessage() {}

func (x *SimpleWork) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleWork.ProtoReflect.Descriptor instead.
func (*SimpleWork) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{1}
}

func (x *SimpleWork) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SimpleWork) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SimpleWork) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SimpleWork) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *SimpleWork) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SimpleWork) GetPublishedDate() string {
	if x != nil {
		return x.PublishedDate
	}
	return ""
}

func (x *SimpleWork) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *SimpleWork) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *SimpleWork) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *SimpleWork) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SimpleWork) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SimpleWork) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// SimpleWorkAuthor 返回前端的作者数据
type SimpleWorkAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Avatar    string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar"`
	FirstName string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name"`
	LastName  string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name"`
}

func (x *SimpleWorkAuthor) Reset() {
	*x = SimpleWorkAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleWorkAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleWorkAuthor) ProtoMessage() {}

func (x *SimpleWorkAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleWorkAuthor.ProtoReflect.Descriptor instead.
func (*SimpleWorkAuthor) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{2}
}

func (x *SimpleWorkAuthor) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SimpleWorkAuthor) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SimpleWorkAuthor) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *SimpleWorkAuthor) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

// WorkDetail 作品详情
type WorkDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Type          uint64            `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Title         string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	SubTitle      string            `protobuf:"bytes,4,opt,name=sub_title,json=subTitle,proto3" json:"sub_title"`
	Description   string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
	Introduction  string            `protobuf:"bytes,6,opt,name=introduction,proto3" json:"introduction"`
	PublishedDate string            `protobuf:"bytes,7,opt,name=published_date,json=publishedDate,proto3" json:"published_date"`
	Series        string            `protobuf:"bytes,8,opt,name=series,proto3" json:"series"`
	SerialNum     string            `protobuf:"bytes,9,opt,name=serial_num,json=serialNum,proto3" json:"serial_num"`
	Rarity        string            `protobuf:"bytes,10,opt,name=rarity,proto3" json:"rarity"`
	Cover         string            `protobuf:"bytes,11,opt,name=cover,proto3" json:"cover"`
	Path          string            `protobuf:"bytes,12,opt,name=path,proto3" json:"path"`
	CreatedAt     string            `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	Collectors    uint64            `protobuf:"varint,14,opt,name=collectors,proto3" json:"collectors"`
	Author        *SimpleWorkAuthor `protobuf:"bytes,15,opt,name=author,proto3" json:"author"`
}

func (x *WorkDetail) Reset() {
	*x = WorkDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkDetail) ProtoMessage() {}

func (x *WorkDetail) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkDetail.ProtoReflect.Descriptor instead.
func (*WorkDetail) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{3}
}

func (x *WorkDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkDetail) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *WorkDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WorkDetail) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *WorkDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkDetail) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *WorkDetail) GetPublishedDate() string {
	if x != nil {
		return x.PublishedDate
	}
	return ""
}

func (x *WorkDetail) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *WorkDetail) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *WorkDetail) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *WorkDetail) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *WorkDetail) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WorkDetail) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkDetail) GetCollectors() uint64 {
	if x != nil {
		return x.Collectors
	}
	return 0
}

func (x *WorkDetail) GetAuthor() *SimpleWorkAuthor {
	if x != nil {
		return x.Author
	}
	return nil
}

// SimpleWorkIntroduction 简单的介绍
type SimpleWorkIntroduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SimpleWorkIntroduction) Reset() {
	*x = SimpleWorkIntroduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleWorkIntroduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleWorkIntroduction) ProtoMessage() {}

func (x *SimpleWorkIntroduction) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleWorkIntroduction.ProtoReflect.Descriptor instead.
func (*SimpleWorkIntroduction) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{4}
}

// SimpleWorkResource 作品资源
type SimpleWorkResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     uint64 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Url      string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	OrderNum uint64 `protobuf:"varint,3,opt,name=order_num,json=orderNum,proto3" json:"order_num"`
}

func (x *SimpleWorkResource) Reset() {
	*x = SimpleWorkResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleWorkResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleWorkResource) ProtoMessage() {}

func (x *SimpleWorkResource) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleWorkResource.ProtoReflect.Descriptor instead.
func (*SimpleWorkResource) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{5}
}

func (x *SimpleWorkResource) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SimpleWorkResource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SimpleWorkResource) GetOrderNum() uint64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

// WorkIntroduction 作品介绍
type WorkIntroduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkId    uint64 `protobuf:"varint,1,opt,name=work_id,json=workId,proto3" json:"work_id"`
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content"`
	Status    uint64 `protobuf:"varint,3,opt,name=status,proto3" json:"status"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *WorkIntroduction) Reset() {
	*x = WorkIntroduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkIntroduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkIntroduction) ProtoMessage() {}

func (x *WorkIntroduction) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkIntroduction.ProtoReflect.Descriptor instead.
func (*WorkIntroduction) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{6}
}

func (x *WorkIntroduction) GetWorkId() uint64 {
	if x != nil {
		return x.WorkId
	}
	return 0
}

func (x *WorkIntroduction) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WorkIntroduction) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkIntroduction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkIntroduction) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// WorkResource 作品资源
type WorkResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkId uint64 `protobuf:"varint,1,opt,name=work_id,json=workId,proto3" json:"work_id"`
	Sort   uint64 `protobuf:"varint,2,opt,name=sort,proto3" json:"sort"`
}

func (x *WorkResource) Reset() {
	*x = WorkResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkResource) ProtoMessage() {}

func (x *WorkResource) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkResource.ProtoReflect.Descriptor instead.
func (*WorkResource) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{7}
}

func (x *WorkResource) GetWorkId() uint64 {
	if x != nil {
		return x.WorkId
	}
	return 0
}

func (x *WorkResource) GetSort() uint64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// RecommendWorksPost 获取推荐作品
type RecommendWorksPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num uint64 `protobuf:"varint,1,opt,name=num,proto3" json:"num"` // 数量
}

func (x *RecommendWorksPost) Reset() {
	*x = RecommendWorksPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendWorksPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendWorksPost) ProtoMessage() {}

func (x *RecommendWorksPost) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendWorksPost.ProtoReflect.Descriptor instead.
func (*RecommendWorksPost) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{8}
}

func (x *RecommendWorksPost) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

// AuthorWorkPaginationPost 根据 作者获取作品分页
type AuthorWorkPaginationPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId uint64 `protobuf:"varint,1,opt,name=author_id,json=authorId,proto3" json:"author_id"`
	Type     uint64 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Size     uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size"`
	Page     uint64 `protobuf:"varint,4,opt,name=page,proto3" json:"page"`
}

func (x *AuthorWorkPaginationPost) Reset() {
	*x = AuthorWorkPaginationPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorWorkPaginationPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorWorkPaginationPost) ProtoMessage() {}

func (x *AuthorWorkPaginationPost) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorWorkPaginationPost.ProtoReflect.Descriptor instead.
func (*AuthorWorkPaginationPost) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{9}
}

func (x *AuthorWorkPaginationPost) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *AuthorWorkPaginationPost) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AuthorWorkPaginationPost) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AuthorWorkPaginationPost) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

// CreateWorkPost 创建作品
type CreateWorkPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId      uint64 `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id"`
	Type          uint64 `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	SubTitle      string `protobuf:"bytes,5,opt,name=sub_title,json=subTitle,proto3" json:"sub_title"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description"`
	PublishedDate string `protobuf:"bytes,7,opt,name=published_date,json=publishedDate,proto3" json:"published_date"`
	SerialNum     string `protobuf:"bytes,8,opt,name=serial_num,json=serialNum,proto3" json:"serial_num"`
	Series        string `protobuf:"bytes,9,opt,name=series,proto3" json:"series"`
	Rarity        int64  `protobuf:"varint,10,opt,name=rarity,proto3" json:"rarity"`
	Introduction  string `protobuf:"bytes,11,opt,name=introduction,proto3" json:"introduction"`
	Path          string `protobuf:"bytes,12,opt,name=path,proto3" json:"path"`
	Cover         string `protobuf:"bytes,13,opt,name=cover,proto3" json:"cover"`
}

func (x *CreateWorkPost) Reset() {
	*x = CreateWorkPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkPost) ProtoMessage() {}

func (x *CreateWorkPost) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkPost.ProtoReflect.Descriptor instead.
func (*CreateWorkPost) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{10}
}

func (x *CreateWorkPost) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CreateWorkPost) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateWorkPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateWorkPost) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *CreateWorkPost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateWorkPost) GetPublishedDate() string {
	if x != nil {
		return x.PublishedDate
	}
	return ""
}

func (x *CreateWorkPost) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *CreateWorkPost) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *CreateWorkPost) GetRarity() int64 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *CreateWorkPost) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CreateWorkPost) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateWorkPost) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// UpdateWorkPost 更新作品
type UpdateWorkPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	AuthorId      uint64 `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id"`
	Type          uint64 `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	SubTitle      string `protobuf:"bytes,5,opt,name=sub_title,json=subTitle,proto3" json:"sub_title"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description"`
	PublishedDate string `protobuf:"bytes,7,opt,name=published_date,json=publishedDate,proto3" json:"published_date"`
	SerialNum     string `protobuf:"bytes,8,opt,name=serial_num,json=serialNum,proto3" json:"serial_num"`
	Series        string `protobuf:"bytes,9,opt,name=series,proto3" json:"series"`
	Rarity        int64  `protobuf:"varint,10,opt,name=rarity,proto3" json:"rarity"`
	Introduction  string `protobuf:"bytes,11,opt,name=introduction,proto3" json:"introduction"`
	Path          string `protobuf:"bytes,12,opt,name=path,proto3" json:"path"`
	Cover         string `protobuf:"bytes,13,opt,name=cover,proto3" json:"cover"`
}

func (x *UpdateWorkPost) Reset() {
	*x = UpdateWorkPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkPost) ProtoMessage() {}

func (x *UpdateWorkPost) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkPost.ProtoReflect.Descriptor instead.
func (*UpdateWorkPost) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateWorkPost) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWorkPost) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *UpdateWorkPost) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateWorkPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateWorkPost) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *UpdateWorkPost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateWorkPost) GetPublishedDate() string {
	if x != nil {
		return x.PublishedDate
	}
	return ""
}

func (x *UpdateWorkPost) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *UpdateWorkPost) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *UpdateWorkPost) GetRarity() int64 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *UpdateWorkPost) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *UpdateWorkPost) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateWorkPost) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// WorkResponse 返回
type WorkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    *Work  `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *WorkResponse) Reset() {
	*x = WorkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkResponse) ProtoMessage() {}

func (x *WorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkResponse.ProtoReflect.Descriptor instead.
func (*WorkResponse) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{12}
}

func (x *WorkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WorkResponse) GetData() *Work {
	if x != nil {
		return x.Data
	}
	return nil
}

// WorkDetailResponse 返回 作品 详情
type WorkDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string      `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    *WorkDetail `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *WorkDetailResponse) Reset() {
	*x = WorkDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkDetailResponse) ProtoMessage() {}

func (x *WorkDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkDetailResponse.ProtoReflect.Descriptor instead.
func (*WorkDetailResponse) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{13}
}

func (x *WorkDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WorkDetailResponse) GetData() *WorkDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

// RecommendWorksResponse 返回推荐的作品
type RecommendWorksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    []*SimpleWork `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *RecommendWorksResponse) Reset() {
	*x = RecommendWorksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendWorksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendWorksResponse) ProtoMessage() {}

func (x *RecommendWorksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendWorksResponse.ProtoReflect.Descriptor instead.
func (*RecommendWorksResponse) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{14}
}

func (x *RecommendWorksResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RecommendWorksResponse) GetData() []*SimpleWork {
	if x != nil {
		return x.Data
	}
	return nil
}

// AuthorWorkPaginationResponse 根据 作者获取作品分页
type AuthorWorkPaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                              `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    *AuthorWorkPaginationResponse_Works `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *AuthorWorkPaginationResponse) Reset() {
	*x = AuthorWorkPaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorWorkPaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorWorkPaginationResponse) ProtoMessage() {}

func (x *AuthorWorkPaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorWorkPaginationResponse.ProtoReflect.Descriptor instead.
func (*AuthorWorkPaginationResponse) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{15}
}

func (x *AuthorWorkPaginationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthorWorkPaginationResponse) GetData() *AuthorWorkPaginationResponse_Works {
	if x != nil {
		return x.Data
	}
	return nil
}

// WorkPaginationResponse 返回 分页
type WorkPaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                        `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    *WorkPaginationResponse_Works `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *WorkPaginationResponse) Reset() {
	*x = WorkPaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkPaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkPaginationResponse) ProtoMessage() {}

func (x *WorkPaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkPaginationResponse.ProtoReflect.Descriptor instead.
func (*WorkPaginationResponse) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{16}
}

func (x *WorkPaginationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WorkPaginationResponse) GetData() *WorkPaginationResponse_Works {
	if x != nil {
		return x.Data
	}
	return nil
}

type AuthorWorkPaginationResponse_Works struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SimpleWork `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *AuthorWorkPaginationResponse_Works) Reset() {
	*x = AuthorWorkPaginationResponse_Works{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorWorkPaginationResponse_Works) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorWorkPaginationResponse_Works) ProtoMessage() {}

func (x *AuthorWorkPaginationResponse_Works) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorWorkPaginationResponse_Works.ProtoReflect.Descriptor instead.
func (*AuthorWorkPaginationResponse_Works) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{15, 0}
}

func (x *AuthorWorkPaginationResponse_Works) GetList() []*SimpleWork {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AuthorWorkPaginationResponse_Works) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type WorkPaginationResponse_Works struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*Work `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *WorkPaginationResponse_Works) Reset() {
	*x = WorkPaginationResponse_Works{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_work_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkPaginationResponse_Works) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkPaginationResponse_Works) ProtoMessage() {}

func (x *WorkPaginationResponse_Works) ProtoReflect() protoreflect.Message {
	mi := &file_nft_work_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkPaginationResponse_Works.ProtoReflect.Descriptor instead.
func (*WorkPaginationResponse_Works) Descriptor() ([]byte, []int) {
	return file_nft_work_proto_rawDescGZIP(), []int{16, 0}
}

func (x *WorkPaginationResponse_Works) GetList() []*Work {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *WorkPaginationResponse_Works) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_nft_work_proto protoreflect.FileDescriptor

var file_nft_work_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6e, 0x66, 0x74, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x6e, 0x66, 0x74, 0x22, 0xe4, 0x03, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc4, 0x02, 0x0a,
	0x0a, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x76, 0x0a, 0x10, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb7, 0x03, 0x0a, 0x0a,
	0x57, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x57, 0x0a, 0x12, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3b, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x22, 0x26, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x73, 0x0a, 0x18, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0xda, 0x02, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xea, 0x02,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x0c, 0x57, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x66, 0x74,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb9, 0x01, 0x0a, 0x1c, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x66, 0x74,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x42, 0x0a, 0x05, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa7, 0x01,
	0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x05, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x62, 0x3b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nft_work_proto_rawDescOnce sync.Once
	file_nft_work_proto_rawDescData = file_nft_work_proto_rawDesc
)

func file_nft_work_proto_rawDescGZIP() []byte {
	file_nft_work_proto_rawDescOnce.Do(func() {
		file_nft_work_proto_rawDescData = protoimpl.X.CompressGZIP(file_nft_work_proto_rawDescData)
	})
	return file_nft_work_proto_rawDescData
}

var file_nft_work_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_nft_work_proto_goTypes = []interface{}{
	(*Work)(nil),                               // 0: nft.Work
	(*SimpleWork)(nil),                         // 1: nft.SimpleWork
	(*SimpleWorkAuthor)(nil),                   // 2: nft.SimpleWorkAuthor
	(*WorkDetail)(nil),                         // 3: nft.WorkDetail
	(*SimpleWorkIntroduction)(nil),             // 4: nft.SimpleWorkIntroduction
	(*SimpleWorkResource)(nil),                 // 5: nft.SimpleWorkResource
	(*WorkIntroduction)(nil),                   // 6: nft.WorkIntroduction
	(*WorkResource)(nil),                       // 7: nft.WorkResource
	(*RecommendWorksPost)(nil),                 // 8: nft.RecommendWorksPost
	(*AuthorWorkPaginationPost)(nil),           // 9: nft.AuthorWorkPaginationPost
	(*CreateWorkPost)(nil),                     // 10: nft.CreateWorkPost
	(*UpdateWorkPost)(nil),                     // 11: nft.UpdateWorkPost
	(*WorkResponse)(nil),                       // 12: nft.WorkResponse
	(*WorkDetailResponse)(nil),                 // 13: nft.WorkDetailResponse
	(*RecommendWorksResponse)(nil),             // 14: nft.RecommendWorksResponse
	(*AuthorWorkPaginationResponse)(nil),       // 15: nft.AuthorWorkPaginationResponse
	(*WorkPaginationResponse)(nil),             // 16: nft.WorkPaginationResponse
	(*AuthorWorkPaginationResponse_Works)(nil), // 17: nft.AuthorWorkPaginationResponse.Works
	(*WorkPaginationResponse_Works)(nil),       // 18: nft.WorkPaginationResponse.Works
}
var file_nft_work_proto_depIdxs = []int32{
	2,  // 0: nft.WorkDetail.author:type_name -> nft.SimpleWorkAuthor
	0,  // 1: nft.WorkResponse.data:type_name -> nft.Work
	3,  // 2: nft.WorkDetailResponse.data:type_name -> nft.WorkDetail
	1,  // 3: nft.RecommendWorksResponse.data:type_name -> nft.SimpleWork
	17, // 4: nft.AuthorWorkPaginationResponse.data:type_name -> nft.AuthorWorkPaginationResponse.Works
	18, // 5: nft.WorkPaginationResponse.data:type_name -> nft.WorkPaginationResponse.Works
	1,  // 6: nft.AuthorWorkPaginationResponse.Works.list:type_name -> nft.SimpleWork
	0,  // 7: nft.WorkPaginationResponse.Works.list:type_name -> nft.Work
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_nft_work_proto_init() }
func file_nft_work_proto_init() {
	if File_nft_work_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nft_work_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Work); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleWork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleWorkAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleWorkIntroduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleWorkResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkIntroduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendWorksPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorWorkPaginationPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendWorksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorWorkPaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkPaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorWorkPaginationResponse_Works); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_work_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkPaginationResponse_Works); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nft_work_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nft_work_proto_goTypes,
		DependencyIndexes: file_nft_work_proto_depIdxs,
		MessageInfos:      file_nft_work_proto_msgTypes,
	}.Build()
	File_nft_work_proto = out.File
	file_nft_work_proto_rawDesc = nil
	file_nft_work_proto_goTypes = nil
	file_nft_work_proto_depIdxs = nil
}
