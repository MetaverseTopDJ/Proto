// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: nft/member_nft.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MemberNft 会员 NFT
type MemberNft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Type          uint64 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	SubTitle      string `protobuf:"bytes,4,opt,name=sub_title,json=subTitle,proto3" json:"sub_title"`
	Description   string `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
	PublishedDate string `protobuf:"bytes,6,opt,name=published_date,json=publishedDate,proto3" json:"published_date"`
	SerialNum     string `protobuf:"bytes,7,opt,name=serial_num,json=serialNum,proto3" json:"serial_num"`
	Series        string `protobuf:"bytes,8,opt,name=series,proto3" json:"series"`
	Rarity        string `protobuf:"bytes,9,opt,name=rarity,proto3" json:"rarity"`
	Cover         string `protobuf:"bytes,10,opt,name=cover,proto3" json:"cover"`
}

func (x *MemberNft) Reset() {
	*x = MemberNft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_member_nft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberNft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberNft) ProtoMessage() {}

func (x *MemberNft) ProtoReflect() protoreflect.Message {
	mi := &file_nft_member_nft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberNft.ProtoReflect.Descriptor instead.
func (*MemberNft) Descriptor() ([]byte, []int) {
	return file_nft_member_nft_proto_rawDescGZIP(), []int{0}
}

func (x *MemberNft) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberNft) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MemberNft) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MemberNft) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *MemberNft) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MemberNft) GetPublishedDate() string {
	if x != nil {
		return x.PublishedDate
	}
	return ""
}

func (x *MemberNft) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *MemberNft) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *MemberNft) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *MemberNft) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// NftMember 拥有某个 NFT 的会员
type NftMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Avatar    string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar"`
	Address   string `protobuf:"bytes,3,opt,name=address,proto3" json:"address"`
	TokenId   uint64 `protobuf:"varint,4,opt,name=token_id,json=tokenId,proto3" json:"token_id"`
	UpdatedAt string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *NftMember) Reset() {
	*x = NftMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_member_nft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftMember) ProtoMessage() {}

func (x *NftMember) ProtoReflect() protoreflect.Message {
	mi := &file_nft_member_nft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftMember.ProtoReflect.Descriptor instead.
func (*NftMember) Descriptor() ([]byte, []int) {
	return file_nft_member_nft_proto_rawDescGZIP(), []int{1}
}

func (x *NftMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NftMember) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *NftMember) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NftMember) GetTokenId() uint64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *NftMember) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// MemberNftsPost 查询会员的 NFT
type MemberNftPaginationPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint64 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	Page uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page"`
	Size uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size"`
}

func (x *MemberNftPaginationPost) Reset() {
	*x = MemberNftPaginationPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_member_nft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberNftPaginationPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberNftPaginationPost) ProtoMessage() {}

func (x *MemberNftPaginationPost) ProtoReflect() protoreflect.Message {
	mi := &file_nft_member_nft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberNftPaginationPost.ProtoReflect.Descriptor instead.
func (*MemberNftPaginationPost) Descriptor() ([]byte, []int) {
	return file_nft_member_nft_proto_rawDescGZIP(), []int{2}
}

func (x *MemberNftPaginationPost) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MemberNftPaginationPost) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MemberNftPaginationPost) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// NftMemberPaginationPost 查询 拥有 NFT 的用户
type NftMemberPaginationPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkId uint64 `protobuf:"varint,1,opt,name=work_id,json=workId,proto3" json:"work_id"`
	Page   uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page"`
	Size   uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size"`
}

func (x *NftMemberPaginationPost) Reset() {
	*x = NftMemberPaginationPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_member_nft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftMemberPaginationPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftMemberPaginationPost) ProtoMessage() {}

func (x *NftMemberPaginationPost) ProtoReflect() protoreflect.Message {
	mi := &file_nft_member_nft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftMemberPaginationPost.ProtoReflect.Descriptor instead.
func (*NftMemberPaginationPost) Descriptor() ([]byte, []int) {
	return file_nft_member_nft_proto_rawDescGZIP(), []int{3}
}

func (x *NftMemberPaginationPost) GetWorkId() uint64 {
	if x != nil {
		return x.WorkId
	}
	return 0
}

func (x *NftMemberPaginationPost) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *NftMemberPaginationPost) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// MemberNftPaginationResponse 返回 分页
type MemberNftPaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                                  `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    *MemberNftPaginationResponse_MemberNfts `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *MemberNftPaginationResponse) Reset() {
	*x = MemberNftPaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_member_nft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberNftPaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberNftPaginationResponse) ProtoMessage() {}

func (x *MemberNftPaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nft_member_nft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberNftPaginationResponse.ProtoReflect.Descriptor instead.
func (*MemberNftPaginationResponse) Descriptor() ([]byte, []int) {
	return file_nft_member_nft_proto_rawDescGZIP(), []int{4}
}

func (x *MemberNftPaginationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MemberNftPaginationResponse) GetData() *MemberNftPaginationResponse_MemberNfts {
	if x != nil {
		return x.Data
	}
	return nil
}

type NftMemberPaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                                  `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
	Data    *NftMemberPaginationResponse_NftMembers `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *NftMemberPaginationResponse) Reset() {
	*x = NftMemberPaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_member_nft_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftMemberPaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftMemberPaginationResponse) ProtoMessage() {}

func (x *NftMemberPaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nft_member_nft_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftMemberPaginationResponse.ProtoReflect.Descriptor instead.
func (*NftMemberPaginationResponse) Descriptor() ([]byte, []int) {
	return file_nft_member_nft_proto_rawDescGZIP(), []int{5}
}

func (x *NftMemberPaginationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NftMemberPaginationResponse) GetData() *NftMemberPaginationResponse_NftMembers {
	if x != nil {
		return x.Data
	}
	return nil
}

type MemberNftPaginationResponse_MemberNfts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*MemberNft `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *MemberNftPaginationResponse_MemberNfts) Reset() {
	*x = MemberNftPaginationResponse_MemberNfts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_member_nft_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberNftPaginationResponse_MemberNfts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberNftPaginationResponse_MemberNfts) ProtoMessage() {}

func (x *MemberNftPaginationResponse_MemberNfts) ProtoReflect() protoreflect.Message {
	mi := &file_nft_member_nft_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberNftPaginationResponse_MemberNfts.ProtoReflect.Descriptor instead.
func (*MemberNftPaginationResponse_MemberNfts) Descriptor() ([]byte, []int) {
	return file_nft_member_nft_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MemberNftPaginationResponse_MemberNfts) GetList() []*MemberNft {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MemberNftPaginationResponse_MemberNfts) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type NftMemberPaginationResponse_NftMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*NftMember `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *NftMemberPaginationResponse_NftMembers) Reset() {
	*x = NftMemberPaginationResponse_NftMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nft_member_nft_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftMemberPaginationResponse_NftMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftMemberPaginationResponse_NftMembers) ProtoMessage() {}

func (x *NftMemberPaginationResponse_NftMembers) ProtoReflect() protoreflect.Message {
	mi := &file_nft_member_nft_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftMemberPaginationResponse_NftMembers.ProtoReflect.Descriptor instead.
func (*NftMemberPaginationResponse_NftMembers) Descriptor() ([]byte, []int) {
	return file_nft_member_nft_proto_rawDescGZIP(), []int{5, 0}
}

func (x *NftMemberPaginationResponse_NftMembers) GetList() []*NftMember {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *NftMemberPaginationResponse_NftMembers) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_nft_member_nft_proto protoreflect.FileDescriptor

var file_nft_member_nft_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6e, 0x66, 0x74, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x66, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6e, 0x66, 0x74, 0x22, 0x90, 0x02, 0x0a, 0x09,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x8b,
	0x01, 0x0a, 0x09, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x55, 0x0a, 0x17,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0x5a, 0x0a, 0x17, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0xc0, 0x01, 0x0a, 0x1b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x66, 0x74, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x46, 0x0a, 0x0a, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4e, 0x66, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xc0, 0x01, 0x0a, 0x1b, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x66, 0x74,
	0x2e, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x66, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x46, 0x0a,
	0x0a, 0x4e, 0x66, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x66, 0x74, 0x2e,
	0x4e, 0x66, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nft_member_nft_proto_rawDescOnce sync.Once
	file_nft_member_nft_proto_rawDescData = file_nft_member_nft_proto_rawDesc
)

func file_nft_member_nft_proto_rawDescGZIP() []byte {
	file_nft_member_nft_proto_rawDescOnce.Do(func() {
		file_nft_member_nft_proto_rawDescData = protoimpl.X.CompressGZIP(file_nft_member_nft_proto_rawDescData)
	})
	return file_nft_member_nft_proto_rawDescData
}

var file_nft_member_nft_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_nft_member_nft_proto_goTypes = []interface{}{
	(*MemberNft)(nil),                              // 0: nft.MemberNft
	(*NftMember)(nil),                              // 1: nft.NftMember
	(*MemberNftPaginationPost)(nil),                // 2: nft.MemberNftPaginationPost
	(*NftMemberPaginationPost)(nil),                // 3: nft.NftMemberPaginationPost
	(*MemberNftPaginationResponse)(nil),            // 4: nft.MemberNftPaginationResponse
	(*NftMemberPaginationResponse)(nil),            // 5: nft.NftMemberPaginationResponse
	(*MemberNftPaginationResponse_MemberNfts)(nil), // 6: nft.MemberNftPaginationResponse.MemberNfts
	(*NftMemberPaginationResponse_NftMembers)(nil), // 7: nft.NftMemberPaginationResponse.NftMembers
}
var file_nft_member_nft_proto_depIdxs = []int32{
	6, // 0: nft.MemberNftPaginationResponse.data:type_name -> nft.MemberNftPaginationResponse.MemberNfts
	7, // 1: nft.NftMemberPaginationResponse.data:type_name -> nft.NftMemberPaginationResponse.NftMembers
	0, // 2: nft.MemberNftPaginationResponse.MemberNfts.list:type_name -> nft.MemberNft
	1, // 3: nft.NftMemberPaginationResponse.NftMembers.list:type_name -> nft.NftMember
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_nft_member_nft_proto_init() }
func file_nft_member_nft_proto_init() {
	if File_nft_member_nft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nft_member_nft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberNft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_member_nft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_member_nft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberNftPaginationPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_member_nft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftMemberPaginationPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_member_nft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberNftPaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_member_nft_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftMemberPaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_member_nft_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberNftPaginationResponse_MemberNfts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nft_member_nft_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftMemberPaginationResponse_NftMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nft_member_nft_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nft_member_nft_proto_goTypes,
		DependencyIndexes: file_nft_member_nft_proto_depIdxs,
		MessageInfos:      file_nft_member_nft_proto_msgTypes,
	}.Build()
	File_nft_member_nft_proto = out.File
	file_nft_member_nft_proto_rawDesc = nil
	file_nft_member_nft_proto_goTypes = nil
	file_nft_member_nft_proto_depIdxs = nil
}
