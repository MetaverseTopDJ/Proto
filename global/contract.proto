syntax = "proto3";

package global;

option go_package = "./pb;pb";
option java_multiple_files = true;
option java_outer_classname = "global";

/**************** 数据结构 ****************/

// Contract 智能合约
message Contract {
  uint64 id             = 1;
  uint64 type           = 2;
  string name           = 3;
  string address        = 4;
  string noise          = 5;
  string encode_key     = 6;
  string node           = 7;
  uint64 interval       = 8;
  uint64 current        = 9;
  uint64 next           = 10;
  uint64 exec           = 11;
  uint64 check          = 12;
  uint64 block_interval = 13;
  uint64 status         = 14;
  bool   checked        = 15;
  string created_at     = 16;
  string updated_at     = 17;
}

// SimpleContract 智能合约，简单信息
message SimpleContract {
  uint64 id      = 1;
  uint64 type    = 2;
  string name    = 3;
  string address = 4;
}

// RelationContract 关联的智能合约信息
message RelationContract {
  uint64 id      = 1;
  uint64 type    = 2;
  string name    = 3;
  string address = 4;
}

/**************** 请求结构 ****************/

// GenUniqueCodePost
message GenUniqueCodePost {
  uint64 contract_id = 1;
}

// GenUniqueCodesPost
message GenUniqueCodesPost {
  uint64 contract_id = 1;
  uint64 length      = 2;
}

// CheckTransactionByHashPost 检查交易结果
message CheckTransactionByHashPost {
  uint64 id   = 1;
  string hash = 2;
}

// CreateContractPost 创建合约
message CreateContractPost {
  uint64 type           = 2;
  string name           = 3;
  string address        = 4;
  string noise          = 5;
  string encode_key     = 6;
  string node           = 7;
  uint64 interval       = 8;
  uint64 current        = 9;
  uint64 next           = 10;
  uint64 check          = 11;
  uint64 block_interval = 12;
}

// UpdateContractPost 更新合约
message UpdateContractPost {
  uint64 id             = 1;
  uint64 type           = 2;
  string name           = 3;
  string address        = 4;
  string noise          = 5;
  string encode_key     = 6;
  string node           = 7;
  uint64 interval       = 8;
  uint64 current        = 9;
  uint64 next           = 10;
  uint64 check          = 11;
  uint64 block_interval = 12;
}

/**************** 返回结构 ****************/

// ContractResponse 返回合约
message ContractResponse {
  string   message = 1;
  Contract data    = 2;
}

// ContractsResponse 返回列表
message ContractsResponse {
  string   message       = 1;
  repeated Contract data = 2;
}

// ContractAddressResponse 仅返回 合约地址
message ContractAddressResponse {
  string message = 1;
  string data    = 2;
}

// ContractPaginationResponse 返回 分页
message ContractPaginationResponse {
  message Contracts {
    repeated Contract list = 1;
    int64    total         = 2;
  }
  string    message = 1;
  Contracts data    = 2;
}
